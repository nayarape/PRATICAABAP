

## üßæ `REPORT ZI07_CARGA`

REPORT ZI07_CARGA.

TABLES: ekko, ekpo, mara, zt07_ped_carga. " tabelas padr√£o e tabela Z usada no insert

INCLUDE ZI07_CARGA_TOP. " tipos e vari√°veis globais
INCLUDE ZI07_CARGA_SEL. " par√¢metros da tela de sele√ß√£o
INCLUDE ZI07_CARGA_F01. " formul√°rios principais

START-OF-SELECTION.
  PERFORM f_upload_arquivo.   " l√™ e separa os dados do arquivo
  PERFORM f_validacao.        " valida os dados nas tabelas padr√£o do SAP
  PERFORM f_inserir_tabelaz.  " insere os dados v√°lidos na tabela Z
  PERFORM f_exibir_alv.       " mostra os dados no ALV
END-OF-SELECTION.

## üì¶ `INCLUDE ZI07_CARGA_TOP`

```abap
* estrutura com os campos que v√™m do arquivo
TYPES: BEGIN OF ty_entrada,
         ebeln TYPE ekko-ebeln,
         ebelp TYPE ekpo-ebelp,
         matnr TYPE mara-matnr,
         fkimg TYPE ekpo-ktmng,
         netwr TYPE ekpo-netwr,
         erdat TYPE dats,
       END OF ty_entrada.

* vari√°veis internas para armazenar os registros do arquivo e os que foram validados
DATA: it_entrada TYPE TABLE OF ty_entrada,
      wa_entrada TYPE ty_entrada,
      it_final   TYPE TABLE OF ty_entrada,
      wa_final   TYPE ty_entrada.

* recebe cada linha bruta do arquivo
DATA: lt_raw  TYPE STANDARD TABLE OF string,
      lv_line TYPE string.

* objeto do ALV OO (novo modelo)
DATA: lo_alv TYPE REF TO cl_salv_table.


## üñºÔ∏è `INCLUDE ZI07_CARGA_SEL`


* tela de sele√ß√£o com o campo para o caminho do arquivo
SELECTION-SCREEN BEGIN OF BLOCK b1 WITH FRAME TITLE TEXT-001.
PARAMETERS: p_file TYPE rlgrap-filename OBLIGATORY.
SELECTION-SCREEN END OF BLOCK b1.

* ajuda de busca de arquivos no F4
AT SELECTION-SCREEN ON VALUE-REQUEST FOR p_file.
  CALL FUNCTION 'F4_FILENAME'
    IMPORTING file_name = p_file.

## üîß `INCLUDE ZI07_CARGA_F01`

```abap
* faz o upload do arquivo e monta a tabela it_entrada
FORM f_upload_arquivo.

  CALL FUNCTION 'GUI_UPLOAD'
    EXPORTING
      filename            = p_file
      filetype            = 'ASC'
      has_field_separator = 'X' " separa√ß√£o por ponto e v√≠rgula
    TABLES
      data_tab            = lt_raw
    EXCEPTIONS
      OTHERS              = 1.

  IF sy-subrc <> 0.
    MESSAGE 'Erro no upload do arquivo.' TYPE 'E'.
  ENDIF.

  LOOP AT lt_raw INTO lv_line.
    SPLIT lv_line AT ';' INTO
      wa_entrada-ebeln
      wa_entrada-ebelp
      wa_entrada-matnr
      wa_entrada-fkimg
      wa_entrada-netwr
      wa_entrada-erdat. " aqui j√° vem a data pronta no arquivo

    APPEND wa_entrada TO it_entrada.
  ENDLOOP.

ENDFORM.
```


* valida os dados com base nas tabelas padr√£o do SAP
FORM f_validacao.

  LOOP AT it_entrada INTO wa_entrada.

    * se o pedido n√£o existir na ekko, j√° pula
    SELECT SINGLE ebeln FROM ekko WHERE ebeln = @wa_entrada-ebeln.
    IF sy-subrc <> 0. CONTINUE. ENDIF.

    * se o item n√£o existir no pedido, tamb√©m pula
    SELECT SINGLE ebelp FROM ekpo
      WHERE ebeln = @wa_entrada-ebeln
        AND ebelp = @wa_entrada-ebelp.
    IF sy-subrc <> 0. CONTINUE. ENDIF.

    * se o material n√£o existir na mara, n√£o continua
    SELECT SINGLE matnr FROM mara WHERE matnr = @wa_entrada-matnr.
    IF sy-subrc <> 0. CONTINUE. ENDIF.

    * s√≥ entra aqui se passou por todos os testes acima
    APPEND wa_entrada TO it_final.

  ENDLOOP.

ENDFORM.
```

---

* insere os dados validados na tabela ZT07_PED_CARGA
FORM f_inserir_tabelaz.

  LOOP AT it_final INTO wa_entrada.

    DATA wa_carga TYPE zt07_ped_carga.

    wa_carga-vbeln      = wa_entrada-ebeln.
    wa_carga-posnr      = wa_entrada-ebelp.
    wa_carga-matnr      = wa_entrada-matnr.
    wa_carga-fkimg      = wa_entrada-fkimg.
    wa_carga-netwr      = wa_entrada-netwr.
    wa_carga-erdat      = wa_entrada-erdat.
    wa_carga-uzeit      = sy-uzeit.      " hora atual
    wa_carga-data_carga = sy-datum.      " data atual
    wa_carga-hora_carga = sy-uzeit.

    * aqui estou buscando a unidade e moeda direto da ekpo
    SELECT SINGLE meins waers INTO (wa_carga-meins, wa_carga-waers)
      FROM ekpo
      WHERE ebeln = wa_entrada-ebeln
        AND ebelp = wa_entrada-ebelp.

    * insere na tabela Z criada no in√≠cio do case
    INSERT zt07_ped_carga FROM wa_carga.

    * salva se der certo, sen√£o desfaz
    IF sy-subrc = 0.
      COMMIT WORK AND WAIT.
    ELSE.
      ROLLBACK WORK.
    ENDIF.

  ENDLOOP.

ENDFORM.
```

---


* exibe todos os dados da tabela Z com ALV moderno
FORM f_exibir_alv.

  DATA: lt_saida TYPE TABLE OF zt07_ped_carga.

  * busco direto da base Z que foi alimentada
  SELECT * FROM zt07_ped_carga INTO TABLE lt_saida.

  TRY.
      cl_salv_table=>factory(
        IMPORTING r_salv_table = lo_alv
        CHANGING  t_table      = lt_saida ).

      lo_alv->display( ). " mostra o relat√≥rio com filtros, ordena√ß√£o, etc

    CATCH cx_salv_msg INTO DATA(lx_msg).
      MESSAGE lx_msg->get_text( ) TYPE 'E'.
  ENDTRY.

ENDFORM.
```

